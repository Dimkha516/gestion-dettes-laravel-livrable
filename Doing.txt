--- CHANGEMENT api par wane                           ==================: OK

--- TEST ACCES ROUTE PAR AUTHENTIFICATION             ==================: OK

--- FILTRES ALL CLIENT:
    -- UN OU PLUSIEURS TÉLÉPHONES                     ==================: OK
    -- SURNOM: A-Z et Z-A                             ==================: 
    -- CLIENT AVEC COMPTE => INCLUDE                  ==================: 

--- GET CLIENT(ID):
    -- CLIENT AVEC COMPTE => INCLUDE                  ==================:

--- POST CLIENT:
    -- SI OBJET USER VIDE => CREATION SANS COMPTE     ==================:
    -- SI OBJET USER NON VIDE => CREATION AVEC COMPTE ==================:

    "pseudo": "mido",
    "email": "mido@gmail.com",
    "password": "Success@123"

user vers client: has
client: belongsto





------------CONTROLLERS: AJOUTER LES VÉRIFICATIONS AVANT LA RESPONSE DE SUCCES:



http://localhost:3000/swagger/index.html

--------------- A FAIRE:

    ---- MODEL USER:
 -- stocker les informations de l'utilisateur dans le token
    
    ---- MODEL CLIENT:
 -- Définir la méthode filtre par téléphone dans un scope local.
 -- Créer un service uploadService sous forme de facade qui est chargé de l'upload des images.     
 -- En retournant le client, l'image est chargée en base64.
 -- Ajouter un client:
    --- une photo de type png, jpeg ou svg avec une taille maxe de 40 ko.
    --- générer une carte de fidélité avec un code QR. 
    

    ---- MODEL ARTICLE:
 -- Définir la méthode filtre par libellé du modèle Article dans un scope local.


AJOUT COACH:
                        --- la gestion des exceptions personnalisées:
1) définir les exceptions personnalsées sur les services et les repositories

                        --- la gestion des exceptions personnalisées:

2) La gestion de l'image: Stocker dans le cloud (en stockant l'url du cloud dans la BD) et/ou en base64


validaations dossier request:
middleware qui gère les responses: